rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* performers collection */
    match /performers/{userId} {

      // Public read of performer profiles
      allow read: if true;

      // Owner-only writes to profile
      allow write: if request.auth != null && request.auth.uid == userId;

      /* NEW: nested contacts */
      match /contacts/{contactId} {
        // Performer can read (get + list) their own contacts
        allow read, list: if request.auth != null && request.auth.uid == userId;

        // Performer can create contacts via Cloud Function; allow create
        allow create: if request.auth != null && request.auth.uid == userId;

        // For now, block updates/deletes from dashboard (adjust later if needed)
        allow update, delete: if false;
      }
    }

    /* Legacy top-level contacts (safe to keep or delete when migrated) */
    match /contacts/{contactId} {
      allow read, list: if request.auth != null
                        && resource.data.performerUid == request.auth.uid;
      allow create, update, delete: if false;
    }

    /* default deny */
    match /{document=**} {
      allow read, write: if false;
    }
  }
}


